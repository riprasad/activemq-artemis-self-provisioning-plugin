name: Release

env:
  IMAGE_NAME: activemq-artemis-self-provisioning-plugin

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Create release tag
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          git fetch --tags
          HEAD_COMMIT="$(git rev-parse HEAD)"
          RELEASE_TAG="$(cat package.json | jq -r '.version')"
          RELEASE_TAG_COMMIT="$(git rev-list -n 1 ${RELEASE_TAG} || true)"
          if [ "$RELEASE_TAG_COMMIT" != "$HEAD_COMMIT" ]; then
            git config user.name 'artemiscloud-bot'
            git config user.email 'bot@artemiscloud.io'
            git tag -a ${RELEASE_TAG} -m ${RELEASE_TAG} --force
            git push origin $RELEASE_TAG --force
          fi

      - name: Set outputs
        id: vars
        run: | 
         echo "image_tag=$(git describe --exact-match --tags | sed 's/v//')" >> $GITHUB_OUTPUT
      - name: Check outputs
        run: | 
         echo ${{ steps.vars.outputs.image_tag }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to image repository quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and Push the image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.QUAY_NAMESPACE }}/${{env.IMAGE_NAME}}:dev.latest, ${{ steps.vars.outputs.image_tag }}
